$BLOCK         BCD,0084
$JOB           ALCSBTTEST
$EXECUTE       IBJOB
$IBJOB         GO, MAP, LOGIC, FIOCS
$IBFTC BLOCDA  FULIST,DD,NODECK,M94
      BLOCK DATA
C
C
      DOUBLE PRECISION C
      COMMON/BTACON/C(100)
C
C
      DATA (C(M),M=1,18) /
     1 9.9009900990099010D-05, 1.0101010101010101D-04,
     2 1.0307153164296021D-04, 1.0519671786240269D-04,
     3 1.0738831615120275D-04, 1.0964912280701754D-04,
     4 1.1198208286674132D-04, 1.1439029970258522D-04,
     5 1.1687704534829360D-04, 1.1944577161968466D-04,
     6 1.2210012210012210D-04, 1.2484394506866417D-04,
     7 1.2768130745658836D-04, 1.3061650992685475D-04,
     8 1.3365410318096766D-04, 1.3679890560875513D-04,
     9 1.4005602240896359D-04, 1.4343086632243259D-04 /
      DATA (C(M),M=19,36) /
     1 1.4692918013517485D-04, 1.5055706112616682D-04,
     2 1.5432098765432099D-04, 1.5822784810126582D-04,
     3 1.6228497241155469D-04, 1.6650016650016650D-04,
     4 1.7088174982911825D-04, 1.7543859649122807D-04,
     5 1.8018018018018018D-04, 1.8511662347278786D-04,
     6 1.9025875190258752D-04, 1.9561815336463224D-04,
     7 2.0120724346076459D-04, 2.0703933747412008D-04,
     8 2.1312872975277067D-04, 2.1949078138718174D-04,
     9 2.2614201718679331D-04, 2.3310023310023310D-04 /
       DATA (C(M),M=37,54) /
     1 2.4038461538461538D-04, 2.4801587301587302D-04,
     2 2.5601638504864311D-04, 2.6441036488630354D-04,
     3 2.7322404371584699D-04, 2.8248587570621469D-04,
     4 2.9222676797194623D-04, 3.0248033877797943D-04,
     5 3.1328320802005013D-04, 3.2467532467532468D-04,
     6 3.3670033670033670D-04, 3.4940600978336827D-04,
     7 3.6284470246734398D-04, 3.7707390648567119D-04,
     8 3.9215686274509804D-04, 4.0816326530612245D-04,
     9 4.2517006802721088D-04, 4.4326241134751773D-04 /
      DATA (C(M),M=55,72) /
     1 4.6253469010175763D-04, 4.8309178743961353D-04,
     2 5.0505050505050505D-04, 5.2854122621564482D-04,
     3 5.5370985603543743D-04, 5.8072009291521487D-04,
     4 6.0975609756097561D-04, 6.4102564102564103D-04,
     5 6.7476383265856950D-04, 7.1123755334281650D-04,
     6 7.5075075075075075D-04, 7.9365079365079365D-04,
     7 8.4033613445378151D-04, 8.9126559714795009D-04,
     8 9.4696969696969697D-04, 1.0080645161290323D-03,
     9 1.0752688172043011D-03, 1.1494252873563218D-03 /
      DATA (C(M),M=73,100) /
     1 1.2315270935960591D-03, 1.3227513227513228D-03,
     2 1.4245014245014245D-03, 1.5384615384615385D-03,
     3 1.6666666666666667D-03, 1.8115942028985507D-03,
     4 1.9762845849802372D-03, 2.1645021645021645D-03,
     5 2.3809523809523810D-03, 2.6315789473684211D-03,
     6 2.9239766081871345D-03, 3.2679738562091503D-03,
     7 3.6764705882352941D-03, 4.1666666666666667D-03,
     8 4.7619047619047619D-03, 5.4945054945054945D-03,
     9 6.4102564102564103D-03, 7.5757575757575758D-03,
     1 9.0909090909090909D-03, 1.1111111111111111D-02,
     2 1.3888888888888889D-02, 1.7857142857142857D-02,
     3 2.3809523809523810D-02, 3.3333333333333333D-02,
     4 5.0000000000000000D-02, 8.3333333333333333D-02,
     5 1.6666666666666667D-01, 5.0000000000000000D-01 /
      END
$IBFTC MAIN    FULIST,DD,NODECK,M94
      INTEGER INDX
      COMMON/BTACON/C(100)
      DIMENSION F(4)
      DOUBLE PRECISION XBETA,OVERA,F
C
      XBETA = 0.625D0
      OVERA = -0.971642362847211D0
      WRITE(6,101)
      WRITE(6,80) XBETA
      WRITE(6,90) OVERA
      CALL ALCSBT(XBETA,OVERA,F)
      DO 200 INDX = 1, 4
      WRITE(6,100) INDX, F(INDX)
  200 CONTINUE
C
      XBETA = 0.9D0
      OVERA = 1.25D0
      WRITE(6,101)
      WRITE(6,80) XBETA
      WRITE(6,90) OVERA
      CALL ALCSBT(XBETA,OVERA,F)
      DO 300 INDX = 1, 4
      WRITE(6,100) INDX, F(INDX)
  300 CONTINUE
C
      XBETA = 0.70D0
      OVERA = -0.05D0
      WRITE(6,101)
      WRITE(6,80) XBETA
      WRITE(6,90) OVERA
      CALL ALCSBT(XBETA,OVERA,F)
      DO 400 INDX = 1, 4
      WRITE(6,100) INDX, F(INDX)
  400 CONTINUE
C
      XBETA = 1.00D00
      OVERA = 1.00D00
      WRITE(6,101)
      WRITE(6,80) OVERA
      WRITE(6,90) XBETA
      CALL ALCSBT(XBETA,OVERA,F)
      DO 500 INDX = 1, 4
      WRITE(6,100) INDX, F(INDX)
C
  500 CONTINUE
   80 FORMAT(12H     OVERA =,D27.20)
   90 FORMAT(12H     XBETA =,D27.20)
  100 FORMAT(5X,1HF,I1,1H=,4X,D27.20)
  101 FORMAT(40H****************************************)
       RETURN
       END
$ENTRY MAIN
$IBFTC R1      FULIST,DD,NODECK,M94
      SUBROUTINE ALCSBT(XBETA,OVERA,F)
C              THIS ROUTINE TAKES BETA AND THE RECIPROCAL OF THE SEMI-
C              MAJOR AXIS AND COMPUTES THE G SERIES (POWERS OF BETA
C              TIMES THE H SERIES OF HERRICKS PARAMETER).
      DIMENSION F(4)
      DOUBLE PRECISION THETA2, F, C, TH2, TWOPI2, ONE, THETA, DSQRT, TH,FCOM0040
     1 TWOPI
      DOUBLE PRECISION XBETA,OVERA,BETA2,BETA
      COMMON/BTACON/C(100)
      EQUIVALENCE ( TH2, L)
      DATA  ONE, LA, LB / 1.0D0, O000100000000, O1771/                  FCOM0080
      DATA TWOPI,TWOPI2 / 6.2831853071795865D0, 39.478417604357434D01 / FCOM0090
      ASSIGN 200 TO LITTLE                                              FCOM0650
      BETA = XBETA
      BETA2 = BETA * BETA
      THETA2 = BETA2 * OVERA
      TH2 = THETA2                                                      FCOM0660
      IF ( TH2 ) 5, 10, 10                                              FCOM0670
    5 IF ( TWOPI2 + TH2 ) 6, 10, 10                                     FCOM0680
    6 ASSIGN 100 TO LITTLE                                              FCOM0690
      THETA = DSQRT ( - THETA2 )                                        FCOM0700
      TH = DMOD ( THETA, TWOPI )                                        FCOM0710
      IF ( TH .EQ. 0.0D0 ) TH = TWOPI                                   FCOM0720
      TH2 = - TH * TH                                                   FCOM0730
   10 MGO = IABS(L) / LA - LB                                           FCOM0740
      IF ( MGO .LT. 1 ) MGO = 1                                         FCOM0750
      IF ( MGO .GT. 18 ) MGO = 18                                       FCOM0760
      DO 30 M = 1, 2                                                    FCOM0770
      F(2) = 0.                                                         FCOM0780
      GO TO (29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12),MGO FCOM0790
   12 F(2) =((((F(2)+ONE)*TH2*C(M)+ONE)*TH2*C(M+2)+ONE)*TH2*C(M+4)+ONE)*FCOM0800
     1 TH2*C(M+6)                                                       FCOM0810
   13 F(2) = ((((((((F(2)+ONE)*TH2*C(M+8)+ONE)*TH2*C(M+10)+ONE)*TH2*    FCOM0820
     1 C(M+12)+ONE)*TH2*C(M+14)+ONE)*TH2*C(M+16)+ONE)*TH2*C(M+18)+ONE)* FCOM0830
     2 TH2 * C(M+20) + ONE ) * TH2 * C(M+22)                            FCOM0840
   14 F(2) = ((((((((F(2)+ONE)*TH2*C(M+24)+ONE)*TH2*C(M+26)+ONE)*TH2*   FCOM0850
     1 C(M+28)+ONE)*TH2*C(M+30)+ONE)*TH2*C(M+32)+ONE)*TH2*C(M+34)+ONE)* FCOM0860
     2 TH2 * C(M+36) + ONE ) * TH2 * C(M+38)                            FCOM0870
   15 F(2) =(((((F(2)+ONE)*TH2*C(M+40)+ONE)*TH2*C(M+42)+ONE)*TH2*C(M+44)FCOM0880
     1 + ONE ) * TH2 * C(M+46) + ONE ) * TH2 * C(M+48 )                 FCOM0890
   16 F(2) = ((((F(2)+ONE)*TH2*C(M+50)+ONE)*TH2*C(M+52)+ONE)*TH2*C(M+54)FCOM0900
     1 + ONE ) * TH2 * C(M+56)                                          FCOM0910
   17 F(2) = (((F(2)+ONE)*TH2*C(M+58)+ONE)*TH2*C(M+60)+ONE)*TH2*C(M+62) FCOM0920
   18 F(2) = (((F(2)+ONE)*TH2*C(M+64)+ONE)*TH2*C(M+66)+ONE)*TH2*C(M+68) FCOM0930
   19 F(2) =(( F(2) + ONE ) * TH2 * C(M+70) + ONE) * TH2 * C(M+72)      FCOM0940
   20 F(2) =(( F(2) + ONE ) * TH2 * C(M+74) + ONE) * TH2 * C(M+76)      FCOM0950
   21 F(2) = ( F(2) + ONE ) * TH2 * C(M+78)                             FCOM0960
   22 F(2) = ( F(2) + ONE ) * TH2 * C(M+80)                             FCOM0970
   23 F(2) = ( F(2) + ONE ) * TH2 * C(M+82)                             FCOM0980
   24 F(2) = ( F(2) + ONE ) * TH2 * C(M+84)                             FCOM0990
   25 CONTINUE                                                          FCOM1000
   26 F(2) = ( F(2) + ONE ) * TH2 * C(M+86)                             FCOM1010
   27 CONTINUE                                                          FCOM1020
   28 F(2) = ( F(2) + ONE ) * TH2 * C(M+88)                             FCOM1030
   29 F(M) = (((((F(2)+ONE)*TH2*C(M+90)+ONE)*TH2*C(M+92)+ONE)*TH2*      FCOM1040
     1 C(M+94)+ONE)*TH2*C(M+96)+ONE)*C(M+98)                            FCOM1050
   30 F(M+2) = F(M) * TH2 + ONE                                         FCOM1060
      GO TO LITTLE, (100,200)
  100 F(1) = (F(1)*TH*TH2 + TH - THETA)/THETA/THETA2                    FCOM1080
      F(2) = F(2)*TH2 / THETA2                                          FCOM1090
      F(3) = F(3)*TH / THETA
  200 F(1) = F(1) * BETA2 * BETA
      F(2) = F(2) * BETA2
      F(3) = F(3) * BETA
C     THIS IS TEST CODE ADDED BY M.HUME IN 2021 FOR TESTING             HUME001C
  900 FORMAT(5X,4HMGO=,7X,I4)                                           HUME002C
  901 FORMAT(5X,2HL=,I20)                                               HUME003C
  902 FORMAT(5X,4HTH2=,3X,D27.20)                                       HUME004C
  903 FORMAT(5X,4HONE=,3X,D27.20)                                       HUME005C
  904 FORMAT(5X,4H2PI=,3X,D27.20)                                       HUME006C
  905 FORMAT(5X,5H2PI2=,2X,D27.20)                                      HUME007C
      WRITE(6,900) MGO                                                  HUME008C
      WRITE(6,901) L                                                    HUME009C
      WRITE(6,902) TH2                                                  HUME010C
      WRITE(6,903) ONE                                                  HUME011C
      WRITE(6,904) TWOPI                                                HUME011C
      WRITE(6,905) TWOPI2                                               HUME012C
C                                                                       HUME013C
      RETURN                                                            FCOM1110
      END                                                               FCOM1120
$DATA
$EOF
$IBSYS
